plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
}

android {
    compileSdkVersion compile_version
//    buildToolsVersion build_tools_version

    defaultConfig {
        applicationId "com.sunggil.flowandroidtest"
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
        versionCode version_code
        versionName version_name

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunner "com.sunggil.flowandroidtest.CustomTestRunner"
        vectorDrawables {
            useSupportLibrary true
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    signingConfigs {
        release {
            storeFile file("../kimsg.keystore")
            storePassword "$System.env.KEYSTORE_PASSWORD"
            keyAlias "$System.env.KEY_ALIAS"
            keyPassword "$System.env.KEY_PASSWORD"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
        dataBinding true
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion jetpack_compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation project(":domain")
    implementation project(":data")

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.core:core-ktx:$core_ktx"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'


    // test
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.arch.core:core-testing:$archTestingVersion"
    androidTestImplementation "com.google.truth:truth:$truthTestingVersion"
    testImplementation "io.mockk:mockk:$mockk_version"
    androidTestImplementation "io.mockk:mockk-android:$mockk_version"
    androidTestImplementation("com.google.dagger:hilt-android-testing:$hilt_version")
    debugImplementation "androidx.compose.ui:ui-test-manifest:$jetpack_compose_version"
    kaptAndroidTest("com.google.dagger:hilt-android-compiler:$hilt_version")


    // retrofit + okhttp
    implementation("com.squareup.okhttp3:okhttp:$okhttp_version")
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava3:$retrofit_version"

    // hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    //Rxjava
    implementation "io.reactivex.rxjava3:rxandroid:$rxjava_version"
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    // (see https://github.com/ReactiveX/RxJava/releases for latest 3.x.x version)
    implementation "io.reactivex.rxjava3:rxjava:$rxjava_version"
    implementation "io.reactivex.rxjava3:rxkotlin:$rxjava_version"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"

    // Jetpack Compose
    implementation "androidx.compose.ui:ui:$jetpack_compose_version"
        // Tooling support (Previews, etc.)
    implementation "androidx.compose.ui:ui-tooling:$jetpack_compose_version"
        // Foundation (Border, Background, Box, Image, Scroll, shapes, animations, etc.)
    implementation "androidx.compose.foundation:foundation:$jetpack_compose_version"
        // Material Design
    implementation "androidx.compose.material:material:$jetpack_compose_version"
        // Material design icons
    implementation "androidx.compose.material:material-icons-core:$jetpack_compose_version"
    implementation "androidx.compose.material:material-icons-extended:$jetpack_compose_version"
        // Integration with activities
    implementation "androidx.activity:activity-compose:$activity_compose_version"
        // Integration with ViewModels
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$viewmodel_compose_version"
        // Navigation
    implementation "androidx.navigation:navigation-compose:$navigation_version"
        // Integration with observables
    implementation "androidx.compose.runtime:runtime-livedata:$jetpack_compose_version"
    implementation "androidx.compose.runtime:runtime-rxjava2:$jetpack_compose_version"
        // UI Tests
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$jetpack_compose_version"
        // Preview
    implementation "androidx.compose.ui:ui-tooling-preview:$jetpack_compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$jetpack_compose_version"


}